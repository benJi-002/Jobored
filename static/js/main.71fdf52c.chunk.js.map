{"version":3,"sources":["resources/jobored.svg","resources/union.svg","components/topBar/TopBar.js","services/JoboredService.js","hooks/http.hook.js","components/jobFilter/JobFilter.js","components/skeleton/SkeletonFrame.js","resources/balloon_empty_state.svg","resources/location.svg","components/jobList/JobList.js","components/jobSearchBar/JobSearchBar.js","components/jobPagination/JobPagination.js","components/pages/jobSearchPage/JobSearchPage.js","components/jobDescription/JobDescription.js","components/pages/jobPage/JobPage.js","components/jobFavorites/JobFavorites.js","components/pages/favoritesPage/FavoritesPage.js","resources/empty-human.svg","components/emptyState/EmptyState.js","components/pages/emptyStatePage/EmptyStatePage.js","components/app/App.js","index.js"],"names":["TopBar","_jsx","className","children","_jsxs","Link","to","src","logo","alt","jobored","NavLink","_ref","isActive","_ref2","useJoboredService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","_x2","_x3","_x4","apply","arguments","clearError","useHttp","onSetAuthorization","token","localStorage","autorization","JSON","stringify","accessToken","ttl","useEffect","favoritesIds","setItem","parse","Date","now","getAuthorization","then","_apiBase","_login","_password","_clienId","_xApiAppId","_clientSecret","_hr","_xSecretKey","_authorization","_getAuthorization","_callee4","res","_context4","console","log","access_token","getAllVacancies","page","from","key","keyword","agreement","Authorization","objects","map","_transformJobData","total","_x5","_x6","getVacancyById","_callee2","id","_context2","_x7","getCatalogues","_ref3","_callee3","_context3","_transformCataloguesData","catalogues","trim","length","limForCatalogues","title_rus","title_trimmed","catalogues_trimmed","job","curr","vacancy","profession","city","town","title","employment","type_of_work","firm","firm_name","payment_from","payment_to","salary","currency","description","vacancyRichText","IndustryInput","props","selectVal","setSelectVal","arrowRef","cataloguesList","setCatalogueKey","onChangeCatalogueKey","value","forEach","item","_Fragment","Select","onChange","onChangeSelect","ref","el","current","placeholder","label","allowDeselect","searchable","nothingFound","dropdownPosition","transitionProps","transition","duration","timingFunction","rightSection","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","rightSectionWidth","styles","root","fontFamily","lineHeight","input","paddingLeft","marginTop","fontWeight","fontSize","border","borderRadius","dropdown","backgroundColor","color","pointerEvents","SalaryInput","clickUp","state","setState","clickDown","firstInputVal","setFirstInputVal","secondInputVal","setSecondInputVal","NumberInput","min","step","onClick","JobFilter","useRef","setCataloguesList","onUseFilter","setFilterLoaded","setSelectedPage","setSearchInputVal","OnClearAll","onRequestForFilter","onCataloguesListLoaded","_toConsumableArray","OnChangeArrow","e","classList","contains","remove","target","add","Button","SkeletonForCards","skeletCount","setSkeletCount","count","items","index","Skeleton","mt","radius","SkeletonForDescriptionUp","SkeletonForDescriptionDown","JobList","jobsList","newItemLoading","onRequest","catalogueKey","filterLoaded","searchInputVal","itemRefs","favItems","getItem","onLocalStorageParse","lStorage","list","replace","split","Number","arr","name","slice","location","includes","tabIndex","filter","remote","push","renderItems","empty","JobSearchBar","Input","onKeyPress","icon","paddingRight","position","top","right","JobPagination","Pagination","onPageSelected","control","JobSearchPage","locSearchVal","cache","locSelectVal","locForVal","locToVal","locCatalogueKey","locFilterLoaded","locPage","setJobsList","setNewItemLoading","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedPage","_useState21","_useState22","pagesCount","setPagesCount","_useJoboredService","initial","onJobsListLoaded","Math","ceil","window","scrollTo","clSelect","clCatalogueKey","clFirstInput","clSecondInput","clSelectedPage","clSearch","clFilterLoaded","select","firstInput","secondInput","LittleCard","jobDescr","itemRef","favItem","favoriteOnItem","BigCard","TypographyStylesProvider","dangerouslySetInnerHTML","__html","JobDescription","jobId","useParams","setJobDescr","updateDescr","onDescrLoaded","skeletonUp","skeletonDown","viewUp","viewDown","JobPage","JobFavorites","favList","setFavList","itemsCount","setItemsCount","onSetCountPages","favIds","onComicsListLoaded","newFavItem","i","preRenderItems","Navigate","FavoritesPage","pageCount","setPageCount","EmptyState","human","gradient","EmptyStatePage","App","Router","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.71fdf52c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/jobored.dd320452.svg\";","export default __webpack_public_path__ + \"static/media/union.7e07a45d.svg\";","import { Link, NavLink } from 'react-router-dom'\r\n\r\nimport './topBar.scss';\r\n\r\nimport jobored from '../../resources/jobored.svg';\r\nimport logo from '../../resources/union.svg';\r\n\r\nconst TopBar = () => {\r\n\r\n    return (\r\n        <header className='topBar__header'>\r\n            <div className=\"topBar__container\">\r\n                <div className='topBar__logo'>\r\n                    <Link \r\n                        to={'/'}\r\n                    >\r\n                        <img className='rotate' src={logo} alt=\"logotype\" />\r\n                        <img className='topBar__logo-text logo' src={jobored} alt=\"logo-text\" />\r\n                    </Link>\r\n                </div>\r\n                <nav className=\"topBar__menu\">\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink\r\n                                to='/'\r\n                                className={({ isActive }) => (isActive ? \"active\" : \"\")}\r\n                            >\r\n                                Поиск Вакансий\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink\r\n                                to='/favorites'\r\n                                className={({ isActive }) => (isActive ? \"active\" : \"\")}\r\n                            >\r\n                                Избранное\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default TopBar;","import { useEffect } from 'react';\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useJoboredService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n    \r\n    if (!localStorage.autorization) {\r\n        localStorage.autorization = JSON.stringify(\r\n            {\r\n                accessToken: 'v3.h.4478689.fe5f7fae0fd29051d96c89d10c951af73ebe4008.55b652556741628ce9f4be5c8d29abbd75b2e72a',\r\n                ttl: 1687459430\r\n            }\r\n        );\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if (!localStorage.favoritesIds) {\r\n            localStorage.setItem('favoritesIds', []);\r\n        }\r\n\r\n        if (JSON.parse(localStorage.autorization).ttl < (Date.now() / 1000)) {\r\n            getAuthorization()\r\n                .then(onSetAuthorization);\r\n        }\r\n    }, []);\r\n    \r\n    function onSetAuthorization(token) {\r\n        localStorage.autorization = JSON.stringify(\r\n            {\r\n                accessToken: token[0],\r\n                ttl: token[1]\r\n            }\r\n        );\r\n    }\r\n\r\n    const _apiBase = 'https://thingproxy.freeboard.io/fetch/https://startup-summer-2023-proxy.onrender.com/2.0',\r\n    _login = 'login=sergei.stralenia@gmail.com',\r\n    _password = 'password=paralect123',\r\n    _clienId = 'client_id=2356',\r\n    _xApiAppId = 'v3.r.137440105.ffdbab114f92b821eac4e21f485343924a773131.06c3bdbb8446aeb91c35b80c42ff69eb9c457948',\r\n    _clientSecret = `client_secret=${_xApiAppId}`,\r\n    _hr = 'hr=0',\r\n    _xSecretKey = 'GEU4nvd3rej*jeh.eqp',\r\n    _authorization = `Bearer ${JSON.parse(localStorage.autorization).accessToken}`;\r\n    \r\n\r\n        \r\n    async function getAuthorization() {\r\n        const res = await request(`${_apiBase}/oauth2/password/?${_login}&${_password}&${_clienId}&${_clientSecret}&${_hr}`, \r\n            'GET', null, \r\n            {\r\n                'Content-Type': 'application/json', \r\n                'x-secret-key': `${_xSecretKey}`\r\n            });\r\n\r\n        console.log(res)\r\n\r\n        return [res.access_token, res.ttl]\r\n    }\r\n\r\n    const getAllVacancies = async (page, from, to, key, keyword, agreement) => {\r\n\r\n        from = from ? `&payment_from=${from}` : '';\r\n        to = to ? `&payment_to=${to}` : '';\r\n        key = key ? `&catalogues=${key}` : '';\r\n        keyword = keyword ? `&keyword=${keyword}` : '';\r\n        agreement = agreement ? `&no_agreement=1` : '';\r\n\r\n        const res = await request(`${_apiBase}/vacancies/?page=${page}&count=4&published=1${agreement}${from}${to}${key}${keyword}`, \r\n        'GET', null, \r\n            {\r\n                'Content-Type': 'application/json', \r\n                'x-secret-key': `${_xSecretKey}`, \r\n                Authorization: `${_authorization}`,\r\n                'X-Api-App-Id': `${_xApiAppId}`\r\n            });\r\n\r\n\r\n        return [res.objects.map(_transformJobData), res.total]\r\n    }\r\n\r\n\r\n    const getVacancyById = async (id) => {\r\n        const res = await request(`${_apiBase}/vacancies/${id}`, \r\n        'GET', null, \r\n            {\r\n                'Content-Type': 'application/json', \r\n                'x-secret-key': `${_xSecretKey}`, \r\n                Authorization: `${_authorization}`,\r\n                'X-Api-App-Id': `${_xApiAppId}`\r\n            });\r\n\r\n\r\n        return _transformJobData(res)\r\n    }\r\n\r\n\r\n    const getCatalogues = async () => {\r\n        const res = await request(`${_apiBase}/catalogues/`, \r\n        'GET', null, \r\n            {\r\n                'Content-Type': 'application/json', \r\n                'x-secret-key': `${_xSecretKey}`, \r\n                Authorization: `${_authorization}`,\r\n                'X-Api-App-Id': `${_xApiAppId}`\r\n            });\r\n\r\n        return  res.map(_transformCataloguesData)\r\n    }\r\n\r\n\r\n    const _transformCataloguesData = (catalogues) => {\r\n\r\n        const limForCatalogues = (catalogues, trim) => {\r\n\r\n            const maxLength = 30;\r\n\r\n            if (catalogues.length > maxLength) {\r\n                return trim;\r\n            } else {\r\n                return catalogues;\r\n            }\r\n        }\r\n\r\n        return {\r\n            key: catalogues.key,\r\n            catalogues: limForCatalogues(catalogues.title_rus, catalogues.title_trimmed),\r\n            catalogues_trimmed: catalogues.title_trimmed,\r\n        }\r\n    }\r\n\r\n    const _transformJobData = (job) => {\r\n\r\n        const salaryDisplay = (from, to, curr) => {\r\n            if (from === 0 && to === 0) {\r\n                return `з/п не указана`\r\n            } else if (from === to || from === 0) {\r\n                return `з/п ${to} ${curr}`\r\n            } else if (from < to) {\r\n                return `з/п ${from} - ${to} ${curr}`\r\n            } else if (to === 0) {\r\n                return `з/п от ${from} ${curr}`\r\n            }\r\n        }\r\n\r\n        return {\r\n            id: job.id,\r\n            vacancy: job.profession,\r\n            city: job.town.title,\r\n            employment: job.type_of_work.title,\r\n            firm: job.firm_name,\r\n            from: job.payment_from,\r\n            to: job.payment_to,\r\n            salary: salaryDisplay(job.payment_from, job.payment_to, job.currency),\r\n            description: job.vacancyRichText ? job.vacancyRichText : 'Описание отсутствует'\r\n        }\r\n    }\r\n\r\n    return {getAuthorization, getAllVacancies, getVacancyById, getCatalogues, loading, error, clearError}\r\n}\r\n\r\nexport default useJoboredService;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method, body, headers) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`); //конструируем новую ошибку\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useRef, useEffect } from 'react';\r\nimport { NumberInput, Select, Button } from '@mantine/core';\r\n\r\nimport useJoboredService from '../../services/JoboredService';\r\nimport './jobFilter.scss';\r\n\r\nconst JobFilter = (props) => {\r\n    \r\n    const arrowRef = useRef([]);\r\n\r\n    const {getCatalogues} = useJoboredService();\r\n\r\n    const {selectVal, setSelectVal, firstInputVal, setFirstInputVal, secondInputVal, setSecondInputVal, cataloguesList, setCataloguesList, setCatalogueKey, onUseFilter, setFilterLoaded, setSelectedPage, setSearchInputVal, OnClearAll} = props;\r\n\r\n\r\n    useEffect(() => {\r\n        onRequestForFilter(true);\r\n    }, [])\r\n\r\n    const onRequestForFilter = () => {\r\n        getCatalogues()\r\n            .then(onCataloguesListLoaded)\r\n    }\r\n\r\n    const onCataloguesListLoaded = (cataloguesList) => {\r\n        setCataloguesList([...cataloguesList]);\r\n    }\r\n    \r\n    const OnChangeArrow = (e) => {\r\n        if (arrowRef.current[0].classList.contains('active')) {\r\n            arrowRef.current[0].classList.remove('active');\r\n\r\n        } else if (e.target === arrowRef.current[1] ) {\r\n            arrowRef.current[0].classList.add('active');\r\n\r\n        } else {\r\n            arrowRef.current[0].classList.remove('active');\r\n        }\r\n    } \r\n\r\n    return (\r\n        <div onClick={(e) => OnChangeArrow(e)} className=\"job__filter\">\r\n            <div className='job__filter-title_wrapper'>\r\n                <h2 className='job__filter-title'>Фильтры</h2>\r\n\r\n                <button \r\n                    className='job__filter-reset'\r\n                    onClick={() => OnClearAll(setSelectVal, setCatalogueKey, setFirstInputVal, setSecondInputVal, setSelectedPage, setSearchInputVal, setFilterLoaded)}\r\n                >\r\n                    Сбросить все <span>×</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"job__filter-industry\">\r\n                <IndustryInput\r\n                    selectVal={selectVal}\r\n                    setSelectVal={setSelectVal}\r\n                    arrowRef={arrowRef}\r\n                    cataloguesList={cataloguesList}\r\n                    setCatalogueKey={setCatalogueKey}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"job__filter-salary\">\r\n                <SalaryInput \r\n                    firstInputVal={firstInputVal}\r\n                    setFirstInputVal={setFirstInputVal}\r\n                    secondInputVal={secondInputVal}\r\n                    setSecondInputVal={setSecondInputVal}\r\n                    OnChangeArrow={OnChangeArrow}\r\n                />\r\n            </div>\r\n\r\n            <div className='job__filter-apply'>\r\n                <Button\r\n                    onClick={() => {onUseFilter()}}\r\n                    data-elem='search-button'\r\n\r\n                    styles={{\r\n                        root: {\r\n                            backgroundColor: '#5E96FC',\r\n                            borderRadius: '8px',\r\n                            width: '100%',\r\n                            height: '40px',\r\n                            fontFamily: 'inherit',\r\n                            fontWeight: '500',\r\n                            fontSize: '14px',\r\n                            transition: 'all .2s ease',\r\n                            '&:hover': {backgroundColor: '#92C1FF'},\r\n                            '&:active': {backgroundColor: '#3B7CD3'},\r\n                        }\r\n                    }}\r\n                >\r\n                    Применить\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst IndustryInput = (props) => {\r\n\r\n\r\n    const {selectVal, setSelectVal, arrowRef, cataloguesList, setCatalogueKey} = props\r\n\r\n    const onChangeSelect = (value) => {\r\n        setSelectVal(selectVal => value)\r\n        onChangeCatalogueKey(value)\r\n    }\r\n\r\n    const onChangeCatalogueKey = (value) => {\r\n        if (value) {\r\n            cataloguesList.forEach((item) => { \r\n                if (item.catalogues === value) {\r\n                    setCatalogueKey(key => item.key);\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setCatalogueKey(key => 0);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                onChange={(value) => onChangeSelect(value)}\r\n                ref={el => arrowRef.current[1] = el}\r\n                data-elem='industry-select'\r\n\r\n                data={cataloguesList.map(item => item.catalogues)}\r\n                value={selectVal}\r\n                placeholder=\"Выберите отрасль\"\r\n                label=\"Отрасль\"\r\n                allowDeselect\r\n                searchable\r\n                nothingFound=\"Отрасль отсутствует\"\r\n                dropdownPosition=\"bottom\"\r\n                transitionProps={\r\n                    { transition: 'pop-top-left', duration: 300, timingFunction: 'ease' }\r\n                }\r\n                rightSection={\r\n                    <svg width=\"16\" height=\"8\" viewBox=\"0 0 16 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path  ref={el => arrowRef.current[0] = el} d=\"M1 0.999999L7.21905 6.33061C7.66844 6.7158 8.33156 6.7158 8.78095 6.33061L15 1\" stroke=\"#ACADB9\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\r\n                    </svg>\r\n                }\r\n                rightSectionWidth={48}\r\n\r\n                styles={{\r\n                    root: {\r\n                        fontFamily: 'inherit',\r\n                        lineHeight: '0',\r\n                    },\r\n                    input: {\r\n                        paddingLeft: '10px',\r\n                        marginTop: '8px',\r\n                        height: '42px',\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '400',\r\n                        fontSize: '14px',\r\n                        border: '1px solid #D5D6DC',\r\n                        borderRadius: '8px',\r\n                        transition: 'all .2s ease',\r\n                        '&:hover': {\r\n                            border: '1px solid #5E96FC', \r\n                            transition: 'all .2s ease',\r\n                        }\r\n                    },\r\n                    dropdown: {\r\n                        borderRadius: '8px'\r\n                    },\r\n                    item: {\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '400',\r\n                        fontSize: '14px',\r\n                        width: '97%',\r\n                        height: '36px',\r\n                        borderRadius: '8px',\r\n                        lineHeight: '1.55',\r\n                        '&:hover': {\r\n                            backgroundColor: '#DEECFF', \r\n                            transition: 'all .2s ease',\r\n                        },\r\n                        '&[data-selected]': {\r\n                            '&, &:hover': {\r\n                                backgroundColor: '#5E96FC',\r\n                                color: '#FFFFFF'\r\n                                },\r\n\r\n                        },\r\n                        '&[data-hovered]': {}\r\n                    },\r\n                    label: {\r\n                        marginTop: '30px',\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '700',\r\n                        fontSize: '16px',\r\n                        lineHeight: '19px',\r\n                        color: '#232134',\r\n                    },\r\n                    rightSection: { \r\n                        pointerEvents: 'none' \r\n                    }\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst SalaryInput = (props) => {\r\n\r\n    const clickUp = (state, setState) => {\r\n        setState(state => +state + 10000)\r\n    }\r\n    \r\n    const clickDown = (state, setState) => {\r\n\r\n        if (state > 0) {\r\n            setState(state => +state - 10000)\r\n            \r\n        } else {\r\n            setState(state => 0)\r\n        }\r\n    }\r\n\r\n    const {firstInputVal, setFirstInputVal, secondInputVal, setSecondInputVal} = props;\r\n\r\n    return (\r\n        <>\r\n            <NumberInput\r\n                onChange={(value) => {setFirstInputVal(value)}}\r\n                data-elem='salary-from-input'\r\n                \r\n                placeholder=\"От\"\r\n                label=\"Оклад\"\r\n                value={firstInputVal}\r\n                min={0}\r\n                step={10000}\r\n                rightSection={\r\n                    <div className='job__filter-salary_arrows'>\r\n\r\n                        <svg onClick={() => clickUp(firstInputVal, setFirstInputVal)}  width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M8.50006 4.5L5.39054 1.83469C5.16584 1.6421 4.83428 1.6421 4.60959 1.83469L1.50006 4.5\" stroke=\"#ACADB9\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\r\n                        </svg>\r\n\r\n                        <svg onClick={() => clickDown(firstInputVal, setFirstInputVal)} width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M1.49994 1.5L4.60946 4.16531C4.83416 4.3579 5.16572 4.3579 5.39041 4.16531L8.49994 1.5\" stroke=\"#ACADB9\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\r\n                        </svg>\r\n\r\n                    </div>  \r\n                }\r\n                rightSectionWidth={36}\r\n                \r\n                styles={{\r\n                    root: {\r\n                        fontFamily: 'inherit',\r\n                        lineHeight: '0',\r\n                    },\r\n                    input: {\r\n                        paddingLeft: '10px',\r\n                        marginTop: '8px',\r\n                        height: '42px',\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '400',\r\n                        fontSize: '14px',\r\n                        border: '1px solid #D5D6DC',\r\n                        borderRadius: '8px',\r\n                        transition: 'all .2s ease',\r\n                        '&:hover': {\r\n                            border: '1px solid #5E96FC', \r\n                            transition: 'all .2s ease',\r\n                        }\r\n                    },\r\n                    item: {\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '400',\r\n                        fontSize: '14px',\r\n                        width: '255px',\r\n                        lineHeight: '1.55',\r\n                    },\r\n                    label: {\r\n                        marginTop: '20px',\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '700',\r\n                        fontSize: '16px',\r\n                        lineHeight: '19px',\r\n                        color: '#232134',\r\n                    }\r\n                }}\r\n            />\r\n\r\n            <NumberInput\r\n                onChange={(value) => {setSecondInputVal(value)}}\r\n                data-elem='salary-to-input'\r\n\r\n                placeholder=\"До\"\r\n                value={secondInputVal}\r\n                min={0}\r\n                step={10000}\r\n                rightSection={\r\n                    <div className='job__filter-salary_arrows'>\r\n\r\n                        <svg onClick={() => clickUp(secondInputVal, setSecondInputVal)} width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M8.50006 4.5L5.39054 1.83469C5.16584 1.6421 4.83428 1.6421 4.60959 1.83469L1.50006 4.5\" stroke=\"#ACADB9\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\r\n                        </svg>\r\n\r\n                        <svg onClick={() => clickDown(secondInputVal, setSecondInputVal)} width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M1.49994 1.5L4.60946 4.16531C4.83416 4.3579 5.16572 4.3579 5.39041 4.16531L8.49994 1.5\" stroke=\"#ACADB9\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\r\n                        </svg>\r\n\r\n                    </div>  \r\n                }\r\n                rightSectionWidth={36}\r\n\r\n                styles={{\r\n                    root: {\r\n                        fontFamily: 'inherit',\r\n                        lineHeight: '0',\r\n                    },\r\n                    input: {\r\n                        paddingLeft: '10px',\r\n                        marginTop: '8px',\r\n                        height: '42px',\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '400',\r\n                        fontSize: '14px',\r\n                        border: '1px solid #D5D6DC',\r\n                        borderRadius: '8px',\r\n                        transition: 'all .2s ease',\r\n                        '&:hover': {\r\n                            border: '1px solid #5E96FC', \r\n                            transition: 'all .2s ease',\r\n                        }\r\n                    },\r\n                    item: {\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '400',\r\n                        fontSize: '14px',\r\n                        width: '255px',\r\n                        lineHeight: '1.55',\r\n                    },\r\n                    label: {\r\n                        fontWeight: '700',\r\n                        fontSize: '16px',\r\n                        lineHeight: '19px',\r\n                        color: '#232134',\r\n                    },\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JobFilter;","import { useState, useEffect } from \"react\";\r\nimport { Skeleton } from \"@mantine/core\";\r\n\r\nconst SkeletonForCards = (props) => {\r\n\r\n    const [skeletCount, setSkeletCount] = useState(4);\r\n    \r\n    useEffect(() => {\r\n        setSkeletCount(skeletCount => props.count)\r\n    }, [])\r\n\r\n    const items = [];\r\n\r\n    for (let index = 0; index < skeletCount; index++) {\r\n        items[index] = \r\n        <li \r\n        className=\"job__item\"\r\n        key={index + 1}\r\n        >\r\n            <Skeleton height={8} mt={8} width=\"35%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={24} width=\"60%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={24} width=\"15%\" radius=\"xl\" />\r\n        </li>\r\n    }\r\n\r\n    return items;\r\n}\r\n\r\nconst SkeletonForDescriptionUp = () => {\r\n    return (\r\n        <>\r\n            <Skeleton height={8} mt={14} width=\"42%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={30} width=\"60%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={30} width=\"20%\" radius=\"xl\" />\r\n        </>\r\n    )\r\n}\r\n\r\nconst SkeletonForDescriptionDown = () => {\r\n    return (\r\n        <>\r\n            <Skeleton height={8} mt={8} width=\"25%\" radius=\"xl\" />\r\n\r\n            <Skeleton height={8} mt={27} width=\"85%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"35%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"70%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"50%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"85%\" radius=\"xl\" />\r\n\r\n            <Skeleton height={8} mt={29} width=\"25%\" radius=\"xl\" />\r\n\r\n            <Skeleton height={8} mt={29} width=\"80%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"65%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"40%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"90%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"90%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"65%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"94%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"15%\" radius=\"xl\" />\r\n\r\n            <Skeleton height={8} mt={29} width=\"25%\" radius=\"xl\" />\r\n\r\n            <Skeleton height={8} mt={28} width=\"40%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"40%\" radius=\"xl\" />\r\n            <Skeleton height={8} mt={15} width=\"55%\" radius=\"xl\" color='red' />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport {SkeletonForCards, SkeletonForDescriptionUp, SkeletonForDescriptionDown};","export default __webpack_public_path__ + \"static/media/balloon_empty_state.70601b11.svg\";","export default __webpack_public_path__ + \"static/media/location.2bbf7a6c.svg\";","import { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {SkeletonForCards} from '../skeleton/SkeletonFrame';\r\n\r\nimport empty from '../../resources/balloon_empty_state.svg';\r\nimport location from '../../resources/location.svg';\r\nimport './jobList.scss';\r\n\r\nconst JobList = (props) => {\r\n    \r\n    const {jobsList, newItemLoading, onRequest, loading, page, firstInputVal, secondInputVal, catalogueKey, filterLoaded, searchInputVal} = props;\r\n    \r\n    const itemRefs = useRef([]);\r\n\r\n    let favItems = [];\r\n\r\n    useEffect(() => {\r\n        if (filterLoaded) {\r\n            onRequest(true, page, +firstInputVal, +secondInputVal, catalogueKey, searchInputVal, (+firstInputVal || +secondInputVal) ? true : false);\r\n        } else {    \r\n            onRequest(true, page);\r\n        }\r\n    }, [page])\r\n    \r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('favoritesIds').length && !favItems.length) {\r\n            favItems = onLocalStorageParse((localStorage.getItem('favoritesIds')), favItems);\r\n        }\r\n    }, [])    \r\n\r\n\r\n    const onLocalStorageParse = (lStorage, list) => {\r\n        list = lStorage\r\n            .replace(/[,]+/g, \" \")\r\n            .split(' ');\r\n        list = list.map(item => Number(item));\r\n\r\n        return list;\r\n    }\r\n\r\n    const favoriteOnItem = (id) => {\r\n\r\n        if (localStorage.getItem('favoritesIds').length && !favItems.length) {\r\n            favItems = onLocalStorageParse((localStorage.getItem('favoritesIds')), favItems);\r\n        }\r\n\r\n        if ( itemRefs.current[id].classList.contains('active')) {\r\n            itemRefs.current[id].classList.remove('active');\r\n            \r\n            favItems = favItems.filter((remote) => remote !== id );\r\n            localStorage.setItem('favoritesIds', favItems);\r\n            \r\n        } else {\r\n            itemRefs.current[id].classList.add('active');\r\n\r\n            favItems.push(id);\r\n            localStorage.setItem('favoritesIds', favItems);\r\n        }\r\n    }\r\n    \r\n    const limitWords = (name) => {\r\n        const maxLength = 57;\r\n\r\n        if (name.length > maxLength) {\r\n            const limitName = name.slice(0, maxLength) + '...';\r\n            return limitName;\r\n        } else {\r\n            return name;\r\n        }\r\n    }\r\n\r\n    const renderItems = (arr) => {\r\n\r\n        const items = arr.map((item) => {\r\n\r\n\r\n            return (\r\n\r\n                <li \r\n                    className=\"job__item\"\r\n                    key={item.id}\r\n                    data-elem={`vacancy-${item.id}`}\r\n                >\r\n                    <Link to={`/${item.id}`}>\r\n                        <span className=\"job__title\">{limitWords(item.vacancy)}</span> \r\n                    </Link>\r\n                    \r\n                    <div className=\"job__descr\">\r\n                        <span className=\"job__descr-salary\">{item.salary}</span>\r\n                        <div className=\"job__descr-dot_wrapper\">\r\n                            <div className=\"job__descr-dot\"></div>\r\n                        </div>\r\n                        <span className=\"job__descr-schedule\">{item.employment}</span>\r\n                    </div>\r\n\r\n                    <div className=\"job__location\">\r\n                        <img className=\"job__location-icon\" src={location} alt=\"location\" />\r\n                        <span className=\"job__location-name\">{item.city}</span>\r\n                    </div>\r\n\r\n                    <button \r\n                        className={(localStorage.getItem('favoritesIds')).includes(item.id) ? 'job__item-star active' : 'job__item-star'}\r\n                        tabIndex={0}\r\n                        ref={el => itemRefs.current[item.id] = el}\r\n                        onClick={() => {\r\n                            favoriteOnItem(item.id)\r\n                        }}\r\n                        data-elem={`vacancy-${item.id}-shortlist-button`}\r\n                    >\r\n                        <svg  viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M10.9718 2.70846C11.4382 1.93348 12.5618 1.93348 13.0282 2.70847L15.3586 6.58087C15.5262 6.85928 15.7995 7.05784 16.116 7.13116L20.5191 8.15091C21.4002 8.35499 21.7474 9.42356 21.1545 10.1066L18.1918 13.5196C17.9788 13.765 17.8744 14.0863 17.9025 14.41L18.2932 18.9127C18.3714 19.8138 17.4625 20.4742 16.6296 20.1214L12.4681 18.3583C12.1689 18.2316 11.8311 18.2316 11.5319 18.3583L7.37038 20.1214C6.53754 20.4742 5.62856 19.8138 5.70677 18.9127L6.09754 14.41C6.12563 14.0863 6.02124 13.765 5.80823 13.5196L2.8455 10.1066C2.25257 9.42356 2.59977 8.35499 3.48095 8.15091L7.88397 7.13116C8.20053 7.05784 8.47383 6.85928 8.64138 6.58087L10.9718 2.70846Z\" stroke=\"#ACADB9\" strokeWidth=\"1.5\"/>\r\n                        </svg>\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n        \r\n        if (loading && !newItemLoading) {      \r\n            return (\r\n                <ul className=\"job__grid\" >\r\n                    <SkeletonForCards count={4}/>\r\n                </ul>\r\n            )\r\n        } else {\r\n            return (\r\n                <ul className=\"job__grid\" >\r\n                    {items}\r\n                </ul>\r\n            )\r\n        }           \r\n    }\r\n\r\n    const items = renderItems(jobsList);\r\n\r\n    \r\n    if (jobsList.length === 0 && !loading) {\r\n        return (\r\n            <img className='job__empty' src={empty} alt=\"empty_ballon\" />       \r\n        )   \r\n    } else {\r\n        return (\r\n            <div className=\"job__list\">\r\n                {items}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default JobList;","import './jobSearchBar.scss';\r\n\r\nimport { Input, Button } from '@mantine/core';\r\n\r\n\r\nconst JobSearchBar = (props) => {\r\n\r\n    const {searchInputVal, setSearchInputVal, onUseFilter} = props;\r\n\r\n    const onSearch = (value) => {\r\n        setSearchInputVal(searchInputVal => value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"jobSearch__wrapper\">\r\n            <Input  \r\n                onChange={(e) => onSearch(e.target.value)}\r\n                onKeyPress={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                        onUseFilter()\r\n                    }\r\n                }}\r\n                data-elem='search-input'\r\n\r\n                value={searchInputVal}\r\n                icon={<svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M10.468 10.468L13.5714 13.5714M12.0924 6.54622C12.0924 9.60931 9.60931 12.0924 6.54622 12.0924C3.48313 12.0924 1 9.60931 1 6.54622C1 3.48313 3.48313 1 6.54622 1C9.60931 1 12.0924 3.48313 12.0924 6.54622Z\" stroke=\"#ACADB9\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\r\n                </svg>}\r\n                placeholder=\"Введите название вакансии\"\r\n\r\n                styles={{\r\n                    input: {\r\n                        paddingLeft: '50px',\r\n                        paddingRight: '107px',\r\n                        height: '48px',\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '400',\r\n                        fontSize: '14px',\r\n                        border: '1px solid #EAEBED',\r\n                        borderRadius: '8px',\r\n                        transition: 'all .2s ease',\r\n                        '&:hover': {\r\n                            border: '1px solid #5E96FC', \r\n                            transition: 'all .2s ease',\r\n                        }\r\n                    },\r\n                    icon: {\r\n                        paddingLeft: '5px',\r\n                    }\r\n                }}\r\n            />\r\n            <Button\r\n                onClick={() => onUseFilter()}\r\n                data-elem='search-button'\r\n\r\n                styles={{\r\n                    root: {\r\n                        position: 'absolute',\r\n                        top: '8px',\r\n                        right: '12px',\r\n                        backgroundColor: '#5E96FC',\r\n                        borderRadius: '8px',\r\n                        width: '83px',\r\n                        height: '32px',\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '500',\r\n                        fontSize: '14px',\r\n                        transition: 'all .2s ease',\r\n                        '&:hover': {backgroundColor: '#92C1FF'},\r\n                        '&:active': {backgroundColor: '#3B7CD3'},\r\n                    }\r\n                }}\r\n            >\r\n                Поиск\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobSearchBar; ","import { Pagination } from '@mantine/core';\r\n\r\nimport './jobPagination.scss';\r\n\r\n\r\nconst JobPagination = (props) => {\r\n    return (\r\n            <Pagination \r\n                onChange={(value) => {\r\n                    props.onPageSelected(value)\r\n                }}\r\n                value={props.page}\r\n                total={props.count}\r\n                position='center'\r\n                styles={{\r\n                    control: {\r\n                        color: '#232134',\r\n                        border: '1px solid #D5D6DC',\r\n                        borderRadius: '4px',\r\n                        height: '32px',\r\n                        fontFamily: 'inherit',\r\n                        fontWeight: '400',\r\n                        fontSize: '16px',\r\n                        transition: 'all .2s ease',\r\n                        '&[data-active]' : {\r\n                            backgroundColor: '#5E96FC'\r\n                        },\r\n                        '&:hover': {\r\n                            transition: 'all .2s ease',\r\n                        },\r\n                    }\r\n                }}\r\n            />\r\n    )\r\n}\r\n\r\nexport default JobPagination;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport useJoboredService from \"../../../services/JoboredService\";\r\n\r\nimport JobFilter from \"../../jobFilter/JobFilter\";\r\nimport JobList from \"../../jobList/JobList\";\r\nimport JobSearchBar from \"../../jobSearchBar/JobSearchBar\";\r\nimport JobPagination from \"../../jobPagination/JobPagination\";\r\n\r\nimport './jobSearchPage.scss';\r\n\r\nconst JobSearchPage = () => {\r\n\r\n    const locSearchVal = localStorage.cache ? JSON.parse(localStorage.cache).locSearchVal : '',\r\n          locSelectVal = localStorage.cache ? JSON.parse(localStorage.cache).locSelectVal : '',\r\n          locForVal = localStorage.cache ? JSON.parse(localStorage.cache).locForVal : '',\r\n          locToVal = localStorage.cache ? JSON.parse(localStorage.cache).locToVal : '',\r\n          locCatalogueKey = localStorage.cache ? JSON.parse(localStorage.cache).locCatalogueKey : 0,\r\n          locFilterLoaded = localStorage.cache ? JSON.parse(localStorage.cache).locFilterLoaded : false,\r\n          locPage = localStorage.cache ? JSON.parse(localStorage.cache).locPage + 1 : 1;\r\n\r\n    const [jobsList, setJobsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    \r\n    const [searchInputVal, setSearchInputVal] = useState(locSearchVal);\r\n    const [selectVal, setSelectVal] = useState(locSelectVal);\r\n    const [firstInputVal, setFirstInputVal] = useState(locForVal);\r\n    const [secondInputVal, setSecondInputVal] = useState(locToVal);\r\n    const [cataloguesList, setCataloguesList] = useState([]);\r\n    const [catalogueKey, setCatalogueKey] = useState(locCatalogueKey);\r\n    \r\n    const [filterLoaded, setFilterLoaded] = useState(locFilterLoaded);\r\n    \r\n    const [selectedPage, setSelectedPage] = useState(locPage);\r\n    const [pagesCount, setPagesCount] = useState(125)\r\n\r\n    const {loading, getAllVacancies} = useJoboredService();\r\n    \r\n    useEffect(() => { \r\n        localStorage.cache = JSON.stringify(\r\n            {\r\n                locPage: selectedPage - 1,\r\n                locSelectVal: selectVal,\r\n                locCatalogueKey: catalogueKey,\r\n                locForVal: firstInputVal,\r\n                locToVal: secondInputVal,\r\n                locSearchVal: searchInputVal,\r\n                locFilterLoaded: filterLoaded,\r\n            }\r\n        );\r\n\r\n    }, [selectedPage, selectVal, catalogueKey, firstInputVal, secondInputVal, searchInputVal, filterLoaded]);\r\n\r\n    const onPageSelectedFromMain = (page) => {\r\n        setSelectedPage(page);\r\n        window.scrollTo(0, 0);\r\n    }\r\n    \r\n    const onChangeCountPages = (total) => {\r\n        if (total > 500) {\r\n            setPagesCount(pagesCount => 125);\r\n        } else {\r\n            setPagesCount(pagesCount => Math.ceil(total / 4));\r\n        }\r\n    }\r\n    \r\n    const onRequest = (initial, page, from, to, key, keyword, agreement) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllVacancies(page, from, to, key, keyword, agreement)\r\n            .then(onJobsListLoaded);\r\n    }\r\n    \r\n    const onJobsListLoaded = (response) => {\r\n\r\n        setJobsList(jobsList => [...response[0]]);\r\n        onChangeCountPages(response[1]);\r\n        setNewItemLoading(newItemLoading => false);\r\n    }\r\n\r\n    const onUseFilter = () => {\r\n        setSelectedPage(page => 1);\r\n        \r\n        onRequest(true, selectedPage - 1, +firstInputVal, +secondInputVal, catalogueKey, searchInputVal, (+firstInputVal || +secondInputVal) ? true : false);\r\n\r\n        if (searchInputVal || selectVal || firstInputVal || secondInputVal) {\r\n            setFilterLoaded(filterLoaded => true);\r\n\r\n        } else {\r\n            setFilterLoaded(filterLoaded => false);\r\n            setCatalogueKey(catalogueKey => 0);\r\n        }\r\n        \r\n\r\n        window.scrollTo(0, 0);\r\n    }\r\n    \r\n    const OnClearAll = (clSelect, clCatalogueKey, clFirstInput, clSecondInput, clSelectedPage, clSearch, clFilterLoaded) => {\r\n        clSelect(select => '');\r\n        clCatalogueKey(key => 0);\r\n        clFirstInput(firstInput => '');\r\n        clSecondInput(secondInput => '');\r\n        clSelectedPage(page => 1);\r\n        clSearch(searchInputVal => '');\r\n        clFilterLoaded(filterLoaded => false);\r\n        \r\n        onRequest(true, selectedPage - 1);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"job__content\">\r\n            <JobFilter\r\n                selectVal={selectVal}\r\n                setSelectVal={setSelectVal}\r\n                firstInputVal={firstInputVal}\r\n                setFirstInputVal={setFirstInputVal}\r\n                secondInputVal={secondInputVal}\r\n                setSecondInputVal={setSecondInputVal}\r\n                cataloguesList={cataloguesList}\r\n                setCataloguesList={setCataloguesList}\r\n                setCatalogueKey={setCatalogueKey}\r\n                onUseFilter={onUseFilter}\r\n                setFilterLoaded={setFilterLoaded}\r\n                onRequest={onRequest}\r\n                selectedPage={selectedPage}\r\n                setSelectedPage={setSelectedPage}\r\n                setSearchInputVal={setSearchInputVal}\r\n                OnClearAll={OnClearAll}\r\n            />\r\n            <div className=\"job__content-wrapper\">\r\n                <JobSearchBar\r\n                    searchInputVal={searchInputVal}\r\n                    setSearchInputVal={setSearchInputVal}\r\n                    onUseFilter={onUseFilter}\r\n                />\r\n                <JobList \r\n                    jobsList={jobsList}\r\n                    newItemLoading={newItemLoading}\r\n                    onRequest={onRequest}\r\n                    loading={loading}\r\n\r\n                    searchInputVal={searchInputVal}\r\n                    firstInputVal={firstInputVal}\r\n                    secondInputVal={secondInputVal}\r\n                    catalogueKey={catalogueKey}\r\n\r\n                    filterLoaded={filterLoaded}\r\n\r\n                    page={selectedPage - 1} \r\n                />\r\n                <div className=\"pag__wrapper\">\r\n                    <JobPagination \r\n                        onPageSelected={onPageSelectedFromMain}\r\n                        page={selectedPage} \r\n                        count={pagesCount}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobSearchPage;","import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { TypographyStylesProvider } from '@mantine/core';\r\n\r\n\r\nimport { SkeletonForDescriptionUp, SkeletonForDescriptionDown } from '../skeleton/SkeletonFrame';\r\nimport useJoboredService from '../../services/JoboredService';\r\n\r\nimport location from '../../resources/location.svg'\r\nimport './jobDescription.scss'\r\n\r\n\r\nconst JobDescription = () => {\r\n\r\n    const {jobId} = useParams();\r\n    const [jobDescr, setJobDescr] = useState([]);\r\n\r\n    \r\n\r\n    const {getVacancyById, loading} = useJoboredService();\r\n\r\n\r\n    useEffect(() => {\r\n        updateDescr(jobId)\r\n    }, [jobId])\r\n\r\n    const updateDescr = (id) => {\r\n        getVacancyById(id)\r\n            .then(onDescrLoaded);\r\n    }\r\n\r\n    const onDescrLoaded = (response) => {\r\n\r\n        setJobDescr(jobDescr => response);\r\n    }\r\n\r\n    const skeletonUp = loading ? <SkeletonForDescriptionUp/> : null;\r\n    const skeletonDown = loading ? <SkeletonForDescriptionDown/> : null;\r\n    const viewUp = !(loading ||  !jobDescr) ? <LittleCard jobDescr={jobDescr}/> : null;\r\n    const viewDown = !(loading ||  !jobDescr) ? <BigCard jobDescr={jobDescr}/> : null;\r\n\r\n    return (\r\n        <div className=\"job__list descr\">\r\n            <div className=\"job__grid descr\">\r\n\r\n                <div className=\"job__item descr\">\r\n                    {skeletonUp}\r\n                    {viewUp}\r\n                </div>\r\n\r\n                <div className=\"job__item descr\">\r\n                    {skeletonDown}\r\n                    {viewDown}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LittleCard = ({jobDescr}) => {\r\n    const {id, vacancy, city, employment, salary} = jobDescr;\r\n\r\n    const itemRef = useRef([]);\r\n\r\n    let favItem = [];\r\n\r\n    const onLocalStorageParse = (lStorage, list) => {\r\n        list = lStorage\r\n            .replace(/[,]+/g, \" \")\r\n            .split(' ')\r\n        list = list.map(item => Number(item))\r\n        return list\r\n    }\r\n\r\n    const favoriteOnItem = (id) => {\r\n\r\n        if (localStorage.getItem('favoritesIds').length && !favItem.length) {\r\n            favItem = onLocalStorageParse((localStorage.getItem('favoritesIds')), favItem);\r\n        }\r\n\r\n        if ( itemRef.current[id].classList.contains('active')) {\r\n            itemRef.current[id].classList.remove('active');\r\n            \r\n            favItem = favItem.filter((remote) => remote !== id );\r\n            localStorage.setItem('favoritesIds', favItem);\r\n        } else {\r\n            itemRef.current[id].classList.add('active');\r\n\r\n            favItem.push(id);\r\n            localStorage.setItem('favoritesIds', favItem);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"job__title descr\">{vacancy}</h3>\r\n            <div className=\"job__descr descr\">\r\n                <span className=\"job__descr-salary descr\">{salary}</span>\r\n                <div className=\"job__descr-dot_wrapper descr\">\r\n                    <div className=\"job__descr-dot descr\"></div>\r\n                </div>\r\n                <span className=\"job__descr-schedule descr\">{employment}</span>\r\n            </div>\r\n\r\n            <div className=\"job__location descr\">\r\n                <img className=\"job__location-icon descr\" src={location} alt=\"location\" />\r\n                <span className=\"job__location-name descr\">{city}</span>\r\n            </div>\r\n\r\n            <button\r\n                className={(localStorage.getItem('favoritesIds')).includes(id) ? 'job__item-star active' : 'job__item-star'}\r\n                tabIndex={0}\r\n                ref={el => itemRef.current[id] = el}\r\n                onClick={() => {\r\n                    favoriteOnItem(id)\r\n                }}\r\n                data-elem={`vacancy-${id}-shortlist-button`} \r\n            >\r\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M10.9718 2.70846C11.4382 1.93348 12.5618 1.93348 13.0282 2.70847L15.3586 6.58087C15.5262 6.85928 15.7995 7.05784 16.116 7.13116L20.5191 8.15091C21.4002 8.35499 21.7474 9.42356 21.1545 10.1066L18.1918 13.5196C17.9788 13.765 17.8744 14.0863 17.9025 14.41L18.2932 18.9127C18.3714 19.8138 17.4625 20.4742 16.6296 20.1214L12.4681 18.3583C12.1689 18.2316 11.8311 18.2316 11.5319 18.3583L7.37038 20.1214C6.53754 20.4742 5.62856 19.8138 5.70677 18.9127L6.09754 14.41C6.12563 14.0863 6.02124 13.765 5.80823 13.5196L2.8455 10.1066C2.25257 9.42356 2.59977 8.35499 3.48095 8.15091L7.88397 7.13116C8.20053 7.05784 8.47383 6.85928 8.64138 6.58087L10.9718 2.70846Z\" stroke=\"#ACADB9\" strokeWidth=\"1.5\"/>\r\n                </svg>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nconst BigCard = ({jobDescr}) => {\r\n    const {description} = jobDescr;\r\n\r\n    return (\r\n        <TypographyStylesProvider>\r\n            <div dangerouslySetInnerHTML={{ __html: `${description}` }} />\r\n        </TypographyStylesProvider>\r\n    )\r\n}\r\n\r\nexport default JobDescription;","import JobDescription from \"../../jobDescription/JobDescription\";\r\n\r\nconst JobPage = () => {\r\n\r\n    return (\r\n        <JobDescription/>\r\n    )\r\n}\r\n\r\nexport default JobPage;","import { useState, useEffect, useRef } from 'react';\r\nimport { Link, Navigate } from 'react-router-dom';\r\n\r\nimport {SkeletonForCards} from '../skeleton/SkeletonFrame';\r\nimport useJoboredService from '../../services/JoboredService';\r\n\r\nimport location from '../../resources/location.svg';\r\nimport './jobFavorites.scss';\r\n\r\n\r\nconst JobFavorites = (props) => {\r\n\r\n    const [favList, setFavList] = useState([]);\r\n    const [itemsCount, setItemsCount] = useState(4);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    \r\n    const {loading, getVacancyById} = useJoboredService();\r\n    \r\n    const itemRefs = useRef([]); \r\n    let favItems = [];\r\n    \r\n    useEffect(() => {\r\n        if (localStorage.getItem('favoritesIds').length && !favItems.length) {\r\n            favItems = onLocalStorageParse((localStorage.getItem('favoritesIds')), favItems);\r\n        }\r\n\r\n        props.onSetCountPages(Math.ceil((favItems.length)/4));\r\n\r\n        setItemsCount(itemsCount => favItems.length);\r\n        \r\n        onRequest(favItems, true);\r\n    }, [])\r\n    \r\n        \r\n    const onRequest = (favIds, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\r\n        \r\n        favIds.forEach(item => getVacancyById(item).then(onComicsListLoaded));\r\n    }\r\n        \r\n    const onComicsListLoaded = (newFavItem) => {\r\n        setFavList(favList => [...favList, newFavItem]);\r\n        setNewItemLoading(newItemLoading => false);\r\n    }\r\n    \r\n    const onLocalStorageParse = (lStorage, list) => {\r\n        list = lStorage\r\n            .replace(/[,]+/g, \" \")\r\n            .split(' ');\r\n        list = list.map(item => Number(item));\r\n        \r\n        return list;\r\n    }\r\n\r\n    const favoriteOnItem = (id) => {\r\n        \r\n        if (localStorage.getItem('favoritesIds').length && !favItems.length) {\r\n            favItems = onLocalStorageParse((localStorage.getItem('favoritesIds')), favItems);\r\n        }\r\n\r\n        if ( itemRefs.current[id].classList.contains('active')) {\r\n            itemRefs.current[id].classList.remove('active');\r\n\r\n            favItems = favItems.filter((remote) => remote !== id );\r\n            localStorage.setItem('favoritesIds', favItems);\r\n\r\n        } else {\r\n            itemRefs.current[id].classList.add('active');\r\n\r\n            favItems.push(id);\r\n            localStorage.setItem('favoritesIds', favItems);\r\n        }\r\n    }\r\n\r\n    const preRenderItems = (items, page) => {\r\n        return items.slice((page*4), ((page*4)+4));\r\n    }\r\n\r\n    const limitWords = (name) => {\r\n        const maxLength = 57;\r\n\r\n        if (name.length > maxLength) {\r\n            const limitName = name.slice(0, maxLength) + '...';\r\n            return limitName;\r\n        } else {\r\n            return name;\r\n        }\r\n    }\r\n\r\n    const renderItems = (arr) => {\r\n\r\n        const items = arr.map((item, i) => {\r\n\r\n\r\n            return (\r\n\r\n                <li \r\n                    className=\"job__item\"\r\n                    key={item.id}\r\n                    data-elem={`vacancy-${item.id}`}\r\n                >\r\n                    <Link to={`/${item.id}`}>\r\n                        <span className=\"job__title\">{limitWords(item.vacancy)}</span> \r\n                    </Link>\r\n                    \r\n                    <div className=\"job__descr\">\r\n                        <span className=\"job__descr-salary\">{item.salary}</span>\r\n                        <div className=\"job__descr-dot_wrapper\">\r\n                            <div className=\"job__descr-dot\"></div>\r\n                        </div>\r\n                        <span className=\"job__descr-schedule\">{item.employment}</span>\r\n                    </div>\r\n\r\n                    <div className=\"job__location\">\r\n                        <img className=\"job__location-icon\" src={location} alt=\"location\" />\r\n                        <span className=\"job__location-name\">{item.city}</span>\r\n                    </div>\r\n\r\n                    <button \r\n                        className={(localStorage.getItem('favoritesIds')).includes(item.id) ? 'job__item-star active' : 'job__item-star'}\r\n                        tabIndex={0}\r\n                        ref={el => itemRefs.current[item.id] = el}\r\n                        onClick={() => {\r\n                            favoriteOnItem(item.id)\r\n                        }}\r\n                        data-elem={`vacancy-${item.id}-shortlist-button`}\r\n                    >\r\n                        <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M10.9718 2.70846C11.4382 1.93348 12.5618 1.93348 13.0282 2.70847L15.3586 6.58087C15.5262 6.85928 15.7995 7.05784 16.116 7.13116L20.5191 8.15091C21.4002 8.35499 21.7474 9.42356 21.1545 10.1066L18.1918 13.5196C17.9788 13.765 17.8744 14.0863 17.9025 14.41L18.2932 18.9127C18.3714 19.8138 17.4625 20.4742 16.6296 20.1214L12.4681 18.3583C12.1689 18.2316 11.8311 18.2316 11.5319 18.3583L7.37038 20.1214C6.53754 20.4742 5.62856 19.8138 5.70677 18.9127L6.09754 14.41C6.12563 14.0863 6.02124 13.765 5.80823 13.5196L2.8455 10.1066C2.25257 9.42356 2.59977 8.35499 3.48095 8.15091L7.88397 7.13116C8.20053 7.05784 8.47383 6.85928 8.64138 6.58087L10.9718 2.70846Z\" stroke=\"#ACADB9\" strokeWidth=\"1.5\"/>\r\n                        </svg>\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        if (loading && !newItemLoading) {      \r\n            return (\r\n                <ul className=\"job__grid\" >\r\n                    <SkeletonForCards count={itemsCount}/>\r\n                </ul>\r\n            )\r\n        } else {\r\n            return (\r\n                <ul className=\"job__grid\" >\r\n                    {items}\r\n                </ul>\r\n            )\r\n        }  \r\n\r\n    }\r\n\r\n    const items = renderItems(preRenderItems(favList, props.page));\r\n\r\n\r\n    if (localStorage.getItem('favoritesIds')) {\r\n        return (\r\n            <div className=\"job__list favorites\">\r\n                {items}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <Navigate to='/favorites/empty'/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobFavorites;","import { useState } from \"react\";\r\n\r\nimport JobFavorites from \"../../jobFavorites/JobFavorites\";\r\nimport JobPagination from \"../../jobPagination/JobPagination\";\r\n\r\nimport './favoritesPage.scss'\r\n\r\nconst FavoritesPage = () => {\r\n\r\n    const [pageCount, setPageCount] = useState(1);\r\n    const [selectedPage, setSelectedPage] = useState(0);\r\n\r\n    const onPageSelectedFromFavorite = (page) => {\r\n        setSelectedPage(page - 1);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    const onSetCountPagesFromFavorite = (count) => {\r\n        setPageCount(count);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <JobFavorites page={selectedPage} onSetCountPages={onSetCountPagesFromFavorite}/>\r\n            <div className=\"pag__wrapper favorites\">\r\n                <JobPagination onPageSelected={onPageSelectedFromFavorite} count={pageCount}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FavoritesPage;","export default __webpack_public_path__ + \"static/media/empty-human.e9719835.svg\";","import { Button } from '@mantine/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport human from '../../resources/empty-human.svg';\r\nimport './emptyState.scss';\r\n\r\n\r\nconst EmptyState = () => {\r\n\r\n    return (\r\n        <div className=\"empty__wrapper\">\r\n            <img className='empty__human' src={human} alt=\"human\" />\r\n            <h2 className=\"empty__text\">Упс, здесь еще ничего нет!</h2>\r\n            <div className=\"empty__button\">\r\n                <Link to={'/'}>\r\n                    <Button\r\n                        gradient\r\n                        styles={{\r\n                            root: {\r\n                                backgroundColor: '#DEECFF',\r\n                                borderRadius: '8px',\r\n                                width: '164px',\r\n                                height: '42px',\r\n                                fontFamily: 'inherit',\r\n                                fontWeight: '600',\r\n                                fontSize: '14px',\r\n                                color: '#3B7CD3',\r\n                                transition: 'all .2s ease',\r\n                                '&:hover': {backgroundColor: '#d7e2f2'},\r\n                                '&:active': {backgroundColor: '#c8d3e3'}\r\n                            }\r\n                        }}\r\n                    >\r\n                        Поиск Вакансий\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyState;","import EmptyState from \"../../emptyState/EmptyState\";\r\n\r\nconst EmptyStatePage = () => {\r\n\r\n    return (\r\n        <EmptyState/>\r\n    )\r\n}\r\n\r\nexport default EmptyStatePage;","import { HashRouter as Router, Route, Routes } from 'react-router-dom'\n    \nimport TopBar from '../topBar/TopBar';\nimport { JobSearchPage, JobPage, FavoritesPage, EmptyStatePage } from '../pages'\n\nconst App = () => {\n\n    return (\n        <Router>\n            <TopBar/>\n            <div className='app'>\n                <main>\n                    <Routes>\n                        <Route path='/' element={<JobSearchPage/>}/>\n\n                        <Route path='/:jobId' element={<JobPage/>}/>\n\n                        <Route path='/favorites' element={<FavoritesPage/>}/>\n\n                        <Route path='/favorites/empty' element={<EmptyStatePage/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM\n    .createRoot(document.getElementById('root'))\n    .render(\n        <App />\n    );\n"],"sourceRoot":""}